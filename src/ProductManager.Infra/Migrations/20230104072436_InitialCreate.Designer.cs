// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManager.Infra.DBContext;

namespace ProductManager.Infra.Migrations
{
    [DbContext(typeof(ProductManagerDBContext))]
    [Migration("20230104072436_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductManager.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CNPJ = "11068167000453",
                            Description = "Acer",
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 2,
                            CNPJ = "72381189000110",
                            Description = "Dell",
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 3,
                            CNPJ = "00623904000173",
                            Description = "Apple",
                            IsRemoved = false
                        });
                });

            modelBuilder.Entity("ProductManager.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "ACER Notebook Gamer Nitro",
                            ExpirationDate = new DateTime(2028, 1, 4, 4, 24, 36, 46, DateTimeKind.Local).AddTicks(8400),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(2570),
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "ACER Notebook Nitro 5 AN515-44-R4KA",
                            ExpirationDate = new DateTime(2027, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(6790),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(6960),
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "ACER Notebook Gamer Nitro 5 AN515-55-79X0",
                            ExpirationDate = new DateTime(2029, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7180),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7190),
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "ACER AN517-52-50RS",
                            ExpirationDate = new DateTime(2029, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7200),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7210),
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Notebook Dell Inspiron 5402",
                            ExpirationDate = new DateTime(2028, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7220),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7220),
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "DELL Notebook Gamer G15-i1000-D20P",
                            ExpirationDate = new DateTime(2028, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7240),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(7250),
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Notebook Dell Inspiron i15-i1100-A70S 15.6",
                            ExpirationDate = new DateTime(2028, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8010),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8020),
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Notebook Apple MacBook Air (de 13 polegadas)",
                            ExpirationDate = new DateTime(2031, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8030),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2021, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8040),
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Notebook Apple MacBook PRO (de 13 polegadas)",
                            ExpirationDate = new DateTime(2031, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8050),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2021, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8050),
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Notebook Apple MacBook Air de 13 polegadas: Chip M2",
                            ExpirationDate = new DateTime(2031, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8070),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2022, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8070),
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 11,
                            Description = "Notebook Apple MacBook Air de 13 polegadas Intel",
                            ExpirationDate = new DateTime(2026, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8080),
                            IsActive = true,
                            IsRemoved = false,
                            ManufacturingDate = new DateTime(2020, 1, 4, 4, 24, 36, 71, DateTimeKind.Local).AddTicks(8090),
                            ProviderId = 3
                        });
                });

            modelBuilder.Entity("ProductManager.Domain.Entities.Produto", b =>
                {
                    b.HasOne("ProductManager.Domain.Entities.Fornecedor", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId")
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ProductManager.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
